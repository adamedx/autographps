<?xml version="1.0" encoding="utf-8"?>

<!-- *******************************************************************
Copyright 2021, Adam Edwards

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
******************************************************************** -->

<Configuration>
  <ViewDefinitions>
    <View>
      <Name>GraphSegmentDisplayType</Name>
      <ViewSelectedBy>
        <TypeName>GraphSegmentDisplayType</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <!-- This GroupBy tag causes an extra row of output to be displayed above the table
             header, which we use to provide the name of the URI being enumerated or requested,
             the same way that Get-ChildItem shows a directory title for the file system. -->
        <PropertyName>ParentPath</PropertyName>
        <Label>Graph Location</Label>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Info</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Preview</Label>
            <!-- Per docs, this should be max column width, but it seems to have no effect in testing. -->
            <Width>48</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Id</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$::.MetaGraphFormatter.SegmentInfo($_)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.MetaGraphFormatter.SegmentType($_)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.MetaGraphFormatter.SegmentPreview($_)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.MetaGraphFormatter.SegmentId($_)</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>

    <View>
      <Name>GraphLastResultType</Name>
      <ViewSelectedBy>
        <TypeName>GraphLastResultType</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>ParentPath</PropertyName>
        <Label>Graph Location</Label>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Index</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Info</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Preview</Label>
            <!-- Per docs, this should be max column width, but it seems to have no effect in testing. -->
            <Width>48</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Id</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <Alignment>Right</Alignment>
                <ScriptBlock>$::.MetaGraphFormatter.ResultIndex($_)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.MetaGraphFormatter.SegmentInfo($_)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.MetaGraphFormatter.SegmentType($_)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.MetaGraphFormatter.SegmentPreview($_)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.MetaGraphFormatter.SegmentId($_)</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>

    <View>
      <Name>GraphStatisticsFormatType</Name>
      <ViewSelectedBy>
        <TypeName>GraphStatisticsDisplayType</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>GraphName</PropertyName>
        <Label>Graph Name</Label>
      </GroupBy>

      <ListControl>

        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>EntityTypeCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>EntityPropertyCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>EntityRelationshipCount</PropertyName>
              </ListItem>
              <ListItem>
                <ItemSelectionCondition>
                  <ScriptBlock>$_.EntityMethodCount -ne $null</ScriptBlock>
                </ItemSelectionCondition>
                <PropertyName>EntityMethodCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ComplexTypeCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ComplexPropertyCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>EnumerationTypeCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>EnumerationValueCount</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>

      </ListControl>
    </View>

    <View>
      <Name>GraphContext</Name>
      <ViewSelectedBy>
        <TypeName>GraphContextDisplayType</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>Name</PropertyName>
        <Label>Graph Name</Label>
      </GroupBy>

      <ListControl>

        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Id</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Endpoint</Label>
                <ScriptBlock>$::.ColorString.ToStandardColorString($_.Endpoint, 'Emphasis2', $null, $null, $null)</ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>Version</PropertyName>
              </ListItem>
              <ListItem>
                <Label>CurrentLocation</Label>
                <ScriptBlock>$_.CurrentLocation.ToGraphUri($null).ToString()</ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>AuthEndpoint</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Metadata</Label>
                <ScriptBlock>$::.MetaGraphFormatter.MetadataStatus($_.Metadata)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>CreationTime</Label>
                <ScriptBlock>$_.CreationTime.ToString('G')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>LastUpdateTime</Label>
                <ScriptBlock>$_.LastUpdateTime.ToString('G')</ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>LastTypeMetadataSource</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>

      </ListControl>
    </View>

    <View>
      <Name>GraphTypeDetails</Name>
      <ViewSelectedBy>
        <TypeName>GraphTypeDisplayType</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>TypeId</PropertyName>
        <Label>Graph TypeId</Label>
      </GroupBy>

      <ListControl>

        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>TypeClass</Label>
                <ScriptBlock>$::.MetaGraphFormatter.TypeClass($_.TypeClass)</ScriptBlock>
              </ListItem>
              <ListItem>
                <ItemSelectionCondition>
                  <ScriptBlock>$_.TypeClass -eq 'Complex' -or $_.TypeClass -eq'Entity'</ScriptBlock>
                </ItemSelectionCondition>
                <PropertyName>BaseType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>DefaultUri</Label>
                <ItemSelectionCondition>
                  <ScriptBlock>$_.TypeClass -eq'Entity'</ScriptBlock>
                </ItemSelectionCondition>
                <ScriptBlock>$::.ColorString.ToStandardColorString($_.DefaultUri, 'Emphasis1', $null, $null, $null)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Relationships</Label>
                <ItemSelectionCondition>
                  <ScriptBlock>$_.TypeClass -eq'Entity'</ScriptBlock>
                </ItemSelectionCondition>
                <ScriptBlock>$::.MetaGraphFormatter.CollectionByProperty($_.Relationships, 'name')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Properties</Label>
                <ItemSelectionCondition>
                  <ScriptBlock>$_.TypeClass -eq'Entity' -or $_.TypeClass -eq 'Complex'</ScriptBlock>
                </ItemSelectionCondition>
                <ScriptBlock>$::.MetaGraphFormatter.CollectionByProperty($_.Properties, 'name')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Enumerations</Label>
                <ItemSelectionCondition>
                  <ScriptBlock>$_.TypeClass -eq'Enumeration'</ScriptBlock>
                </ItemSelectionCondition>
                <ScriptBlock>$::.MetaGraphFormatter.EnumerationValues($_.Properties)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Methods</Label>
                <ItemSelectionCondition>
                  <ScriptBlock>$_.TypeClass -eq'Entity' -or $_.TypeClass -eq 'Complex'</ScriptBlock>
                </ItemSelectionCondition>
                <ScriptBlock>$::.MetaGraphFormatter.CollectionByProperty($_.Methods, 'name')</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>

      </ListControl>
    </View>

    <View>
      <Name>GraphTypeOverview</Name>
      <ViewSelectedBy>
        <TypeName>GraphTypeDisplayType</TypeName>
      </ViewSelectedBy>

      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>TypeId</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>TypeClass</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>BaseType</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DefaultUri</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Relationships</Label>
          </TableColumnHeader>
        </TableHeaders>

        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$::.ColorString.ToStandardColorString($_.TypeId, 'Emphasis2', $null, $null, $null)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.MetaGraphFormatter.TypeClass($_.TypeClass)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>BaseType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.ColorString.ToStandardColorString($_.DefaultUri, 'Emphasis1', $null, $null, $null)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.MetaGraphFormatter.CollectionByProperty($_.Relationships, 'name')</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>

      </TableControl>
    </View>

    <View>
      <Name>GraphContextOverview</Name>
      <ViewSelectedBy>
        <TypeName>GraphContextDisplayType</TypeName>
      </ViewSelectedBy>

      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Metadata</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LastUpdateTime</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Endpoint</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Version</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
          </TableColumnHeader>
        </TableHeaders>

        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$::.MetaGraphFormatter.MetadataStatus($_.Metadata)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.LastUpdateTime.ToString('G')</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.ColorString.ToStandardColorString($_.Endpoint, 'Emphasis2', $null, $null, $null)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Version</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$::.ColorString.ToStandardColorString($_.Name, 'Emphasis1', $null, $null, $null)</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>

      </TableControl>
    </View>

  </ViewDefinitions>
</Configuration>
