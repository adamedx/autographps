# Unit test pipeline for PowerShell Desktop platform
# This pipeline uses the Pester test framework to
# execute unit tests for the module.
# https://aka.ms/yaml

trigger:
  - master

jobs:
- job: BuildWithTests
  displayName: 'Build and test PowerShell module'
  strategy:
    matrix:
      PowerShellDesktop:
        VM_IMAGE: 'vs2017-win2016'
        OS_PLATFORM: 'windows'
        USE_POWERSHELL_CORE: false
      PowerShellCoreWindows:
        VM_IMAGE: 'vs2017-win2016'
        OS_PLATFORM: 'windows'
        USE_POWERSHELL_CORE: true
  pool:
    vmImage: $(VM_IMAGE)
  steps:
  - checkout: self
  - task: powershell@2
    displayName: 'Show current PowerShell version information'
    inputs:
      targetType: inline
      script: 'echo $PSVersionTable'
      pwsh: $(USE_POWERSHELL_CORE)
  - task: powershell@2
    displayName: 'Get original Pester test framework module version'
    inputs:
      targetType: inline
      script: 'Get-Module Pester -ListAvailable'
      pwsh: $(USE_POWERSHELL_CORE)
  - task: powershell@2
    displayName: 'Install Pester test framework required version'
    inputs:
      targetType: inline
      script: 'Install-Module Pester -RequiredVersion 4.6.0 -scope currentuser -force'
      pwsh: $(USE_POWERSHELL_CORE)
  - task: powershell@2
    displayName: 'Get updated Pester test framework module version'
    inputs:
      targetType: inline
      script: 'Get-Module Pester -ListAvailable'
      pwsh: $(USE_POWERSHELL_CORE)
  - task: powershell@2
    displayName: 'Clean build'
    inputs:
      targetType: inline
      script: './build/clean-build.ps1'
      pwsh: $(USE_POWERSHELL_CORE)
  - task: powershell@2
    displayName: 'Install and configure build tools'
    inputs:
      targetType: inline
      script: './build/configure-tools.ps1 -Force -Verbose'
      pwsh: $(USE_POWERSHELL_CORE)
  - task: powershell@2
    displayName: 'Install .net dependencies'
    inputs:
      targetType: inline
      script: './build/configure-tools.ps1; ./build/install.ps1'
      pwsh: $(USE_POWERSHELL_CORE)
  - task: powershell@2
    displayName: 'Build module package'
    inputs:
      targetType: inline
      script: './build/configure-tools.ps1; ./build/build-package -verbose;'
      pwsh: $(USE_POWERSHELL_CORE)
  - task: powershell@2
    displayName: 'Publish module for local testing'
    inputs:
      targetType: inline
      script: './build/configure-tools.ps1; ./build/publish-moduletodev.ps1'
      pwsh: $(USE_POWERSHELL_CORE)
  - task: powershell@2
    displayName: 'Run tests'
    inputs:
      targetType: inline
      script: "./build/import-devmodule.ps1 -initialcommand 'Invoke-Pester' -Wait -ReuseConsole"
      pwsh: $(USE_POWERSHELL_CORE)
